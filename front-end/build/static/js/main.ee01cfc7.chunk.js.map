{"version":3,"sources":["Utilities/Constants/Constants.js","Utilities/DataRequest.js","Utilities/Constants/ActionTypes.js","Actions/user.js","Actions/items.js","Actions/categories.js","Actions/shareActions.js","Components/LoginPage.js","Components/MainPage.js","Components/Objects/NavigationMenu.js","Components/CategoryPage.js","Components/ItemPage.js","Components/CreateCategoryPage.js","Components/CreateNewItemPage.js","App.js","serviceWorker.js","Middleware/logger.js","Middleware/index.js","Reducers/index.js","Reducers/items.js","Reducers/user.js","Reducers/categories.js","index.js"],"names":["server_path","getCategories","requestDataFromServer","getItemDetailById","itemId","arguments","length","undefined","concat","endPoint","method","data","contentType","axios","url","headers","Headers","Content-Type","catch","error","response","console","log","request","message","config","RECEIVE_ITEMS","RECEIVE_CATEGORIES","RECEIVE_USER","RECEIVE_LATEST_ITEMS","RECEIVE_ITEM_DETAIL","receiveUser","user","type","receiveLatestItem","items","receiveItemDetail","item","receiveCategories","categories","handleCreateNewUser","name","username","password","dispatch","showLoading","formData","FormData","append","createUser","then","result","hideLoading","handleLogin","login","handleLogout","logout","handleGetItemsInCategory","categoryId","getItemsInCategory","handleChangeCategoryName","newName","updateCategoryName","latestItems","handleChangeItemDetail","descriptions","description","toString","updateItemDetail","handleDeleteCategory","deleteCategory","handleCreateCategory","createCategory","handleCreateItem","createItem","LoginPage","state","isSignUp","onLogin","_this","props","onSignUp","setState","handleValueChange","e","_ref","value","Object","defineProperty","_this2","this","User","location","react_default","a","createElement","Redirect","to","pathname","className","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Form","size","Segment","stacked","Input","placeholder","onChange","fluid","Button","onClick","icon","iconPosition","Component","connect","_ref2","userData","MainPage","getCategoryNameById","id","category","Categories","find","_this$props","Loading","LatestItem","Container","columns","Menu","text","vertical","Item","header","map","key","Link","paddingTop","Card","Group","Content","content","Meta","createDate","Description","categoryData","itemData","newItems","NavigationMenu","onLogout","attached","position","CategoryPage","isChangeCategoryName","changeName","isCategoryDelete","onClickChangeCategory","match","params","onDeleteCategory","Items","_this$state","Row","marginTop","negative","floated","positive","labelPosition","Icon","ItemPage","isChangeDetail","changCategoryType","changeDetail","errorName","handleDropDownValueChange","onClickModify","checkValidation","BrowseItem","onDeleteItem","isValidate","trim","options","Dropdown","label","selection","_ref3","browseItem","CreateCategoryPage","categoryName","isFinish","onCreateCategory","itemName","itemDescription","onCreateItem","App","loading","isLogin","BrowserRouter","react","Objects_NavigationMenu","build_default","Route","path","component","App_PrivateRoute","exact","CreateNewItemPage","authenticationCheck","isAuthenticated","authenticate","cb","setTimeout","PrivateRoute","rest","objectWithoutProperties","assign","render","from","Boolean","window","hostname","logger","store","next","action","group","returnValue","getState","groupEnd","applyMiddleware","thunk","combineReducers","objectSpread","loadingBar","loadingBarReducer","createStore","reducer","middleware","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee01cfc7.chunk.js","sourcesContent":["export const server_path = \"http://172.26.1.188:8080/\";","import * as axios from \"axios\";\nimport {server_path} from \"./Constants/Constants\";\n\n\nexport function createUser(name='', username='', password='') {\n    const endPoint = `createnewuser`;\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('username', username);\n    formData.append('password', password);\n\n    return requestDataFromServer(endPoint,'POST',formData,'application/json');\n}\n\nexport function login(username='',password='')\n{\n    const endPoint = `login`;\n    const formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n\n    return requestDataFromServer(endPoint,'POST',formData,'application/json');\n}\nexport function logout(username='')\n{\n    const endPoint = `logout`;\n    const formData = new FormData();\n    formData.append('username', username);\n\n    return requestDataFromServer(endPoint,'POST',formData,'application/json');\n}\n\nexport function getCategories()\n{\n    const endPoint = `category`;\n    return requestDataFromServer(endPoint,'GET',null,'application/json');\n}\n\nexport function createCategory(name='') {\n    const endPoint = `createcategory`;\n    const formData = new FormData();\n    formData.append('name', name);\n    return requestDataFromServer(endPoint,'POST',formData,'application/json');\n}\n\nexport function deleteCategory(categoryId=0) {\n    const endPoint = `deletecategory/${categoryId}`;\n    return requestDataFromServer(endPoint,'DELETE',null,'application/json');\n}\n\nexport function getItemsInCategory(categoryId=0)\n{\n    const endPoint = `category/${categoryId}`;\n    return requestDataFromServer(endPoint,'GET',null,'application/json');\n}\n\nexport function updateCategoryName(categoryId=0,newName='') {\n    const endPoint = `modifycategory/${categoryId}`;\n    const formData = new FormData();\n    formData.append('name', newName);\n    return requestDataFromServer(endPoint,'PUT',formData,'application/json');\n}\n\nexport function getItemDetailById(itemId=0) {\n    const endPoint = `item/${itemId}`;\n    return requestDataFromServer(endPoint,'GET',null,'application/json');\n}\n\nexport function createItem(name='',description='',categoryId=0)\n{\n    const endPoint = `createitem`;\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('description', description);\n    formData.append('category_id', categoryId);\n    return requestDataFromServer(endPoint,'POST',formData,'application/json');\n}\n\nexport function updateItemDetail(itemId=0,name='',categoryId=0,description='') {\n    const endPoint = `modifyitem/${itemId}`;\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('categoryid', categoryId.toString());\n    formData.append('description', description);\n    return requestDataFromServer(endPoint,'PUT',formData,'application/json');\n}\n\n\n\nfunction requestDataFromServer(endPoint='',method='',data=null,contentType='')\n{\n    return axios({\n        url: server_path+endPoint,\n        method: method,\n        headers: new Headers({\n            'Content-Type': contentType,\n        }),\n        data: data\n    }).catch(function (error) {\n        if (error.response) {\n            console.log(error.response)\n        } else if (error.request) {\n            console.log(error.request);\n        } else {\n            console.log('Error', error.message);\n        }\n        console.log(error.config);\n    });\n}","export const RECEIVE_ITEMS = 'RECEIVE_ITEMS';\nexport const RECEIVE_CATEGORIES = 'RECEIVE_CATEGORIES';\nexport const RECEIVE_USER = 'RECEIVE_USER';\nexport const RECEIVE_LATEST_ITEMS = 'RECEIVE_LATEST_ITEMS';\nexport const RECEIVE_ITEM_DETAIL = 'RECEIVE_ITEM_DETAIL';","import {RECEIVE_USER} from \"../Utilities/Constants/ActionTypes\";\n\nexport function receiveUser(user) {\n    return{\n        type: RECEIVE_USER,\n        user\n    }\n}\n","import {RECEIVE_ITEM_DETAIL, RECEIVE_ITEMS, RECEIVE_LATEST_ITEMS} from \"../Utilities/Constants/ActionTypes\";\n\nexport function receiveItems(items) {\n    return{\n        type: RECEIVE_ITEMS,\n        items\n    }\n}\n\nexport function receiveLatestItem(items) {\n    return{\n        type: RECEIVE_LATEST_ITEMS,\n        items\n    }\n}\n\nexport function receiveItemDetail(item) {\n    return{\n        type: RECEIVE_ITEM_DETAIL,\n        item\n    }\n}\n","import {RECEIVE_CATEGORIES} from \"../Utilities/Constants/ActionTypes\";\n\nexport function receiveCategories(categories) {\n    return{\n        type: RECEIVE_CATEGORIES,\n        categories\n    }\n}\n","import {showLoading, hideLoading} from 'react-redux-loading';\nimport {\n    createUser,\n    login,\n    logout,\n    getCategories,\n    getItemsInCategory,\n    updateCategoryName, getItemDetailById, updateItemDetail, deleteCategory, createCategory, createItem\n} from \"../Utilities/DataRequest\";\nimport {receiveUser} from \"./user\";\nimport {receiveItemDetail, receiveItems, receiveLatestItem} from \"./items\";\nimport {receiveCategories} from \"./categories\";\n\nexport function handleCreateNewUser(name,username,password) {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return createUser(name,username,password)\n            .then((result) => {\n                dispatch(hideLoading());\n            })\n    }\n}\n\nexport function handleLogin(username,password) {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return login(username,password)\n            .then((result) => {\n                dispatch(receiveUser(result.data));\n                dispatch(hideLoading());\n            })\n    }\n}\n\nexport function handleLogout(username) {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return logout(username)\n            .then((result) => {\n                dispatch(receiveUser(undefined));\n                dispatch(hideLoading());\n            })\n    }\n}\n\nexport function handleGetMainPageData() {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return getCategories()\n            .then((result) => {\n                dispatch(receiveCategories(result.data.categories));\n                dispatch(receiveLatestItem(result.data.latestItems));\n                dispatch(hideLoading());\n            })\n    }\n}\n\nexport function handleGetItemsInCategory(categoryId) {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return getItemsInCategory(categoryId)\n            .then((result) => {\n                dispatch(receiveItems(result.data));\n                dispatch(hideLoading());\n            })\n    }\n}\n\nexport function handleChangeCategoryName(categoryId,name) {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return updateCategoryName(categoryId,name)\n            .then((result) => getCategories()\n                .then((result) => {\n                dispatch(receiveCategories(result.data.categories));\n                dispatch(receiveLatestItem(result.data.latestItems));\n                dispatch(hideLoading());\n            }))\n    }\n}\n\nexport function handleGetItemDetailById(itemId) {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return getItemDetailById(itemId)\n            .then((result) => {\n                dispatch(receiveItemDetail(result.data.item));\n                dispatch(receiveCategories(result.data.categories));\n                dispatch(hideLoading());\n            })\n    }\n}\n\nexport function handleChangeItemDetail(itemId,name,categoryId,descriptions) {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return updateItemDetail(itemId,name,categoryId,descriptions)\n            .then((result) => getItemDetailById(itemId)\n                .then((result) => {\n                    dispatch(receiveItemDetail(result.data.item));\n                    dispatch(receiveCategories(result.data.categories));\n                    dispatch(hideLoading());\n                })\n            )\n    }\n}\n\nexport function handleDeleteCategory(categoryId) {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return deleteCategory(categoryId)\n            .then((result) => getCategories()\n                .then((result) => {\n                    dispatch(receiveCategories(result.data.categories));\n                    dispatch(receiveLatestItem(result.data.latestItems));\n                    dispatch(hideLoading());\n                })\n            )\n    }\n}\n\nexport function handleCreateCategory(name) {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return createCategory(name)\n            .then((result) =>\n                dispatch(hideLoading())\n            )\n    }\n}\n\nexport function handleCreateItem(name,description,categoryId) {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return createItem(name,description,categoryId)\n            .then((result) =>\n                dispatch(hideLoading())\n            )\n    }\n}\n\n\n","import React, {Component} from 'react';\nimport {Button, Form, Grid, Header, Segment} from 'semantic-ui-react'\nimport connect from \"react-redux/es/connect/connect\";\nimport { Redirect} from 'react-router-dom';\nimport {handleCreateNewUser, handleLogin} from \"../Actions/shareActions\";\nclass LoginPage extends Component {\n\n    state = {\n        name:'',\n        username:'',\n        password:'',\n        isSignUp:false\n    };\n\n    onLogin = () =>{\n        this.props.dispatch(handleLogin(this.state.username,this.state.password))\n    };\n\n    onSignUp = () =>{\n        this.props.dispatch(handleCreateNewUser(this.state.name,this.state.username,this.state.password)).then(() => this.setState({isSignUp:!this.state.isSignUp}))\n    };\n\n    handleValueChange = (e, { name, value }) => this.setState({ [name]: value });\n\n\n    render() {\n        const {User} = this.props;\n        const {isSignUp} = this.state;\n        if(User !== undefined)\n        {\n            if(this.props.location.state !== undefined)\n            {\n                return (<Redirect to={this.props.location.pathname} />);\n            }else\n            {\n                return (<Redirect to={\"/\"} />);\n            }\n        }\n\n        return (\n            <div className='login-form'>\n                <style>{`\n      body > div,\n      body > div > div,\n      body > div > div > div.login-form {\n        height: 50%;\n      }npm\n    `}</style>\n                <Grid textAlign='center' style={{height: '100%'}} verticalAlign='middle'>\n                    <Grid.Column style={{maxWidth: 450}}>\n                        <Header as='h2' color='teal' textAlign='center'>\n                            {\n                                isSignUp ?\n                                    'Please fill in the detail'\n                                    :\n                                    'Project Item Category'\n                            }\n                        </Header>\n                        {\n                            isSignUp ?\n                                <Form size='large'>\n                                    <Segment stacked>\n                                        <Form.Input placeholder={'Name'} name={'name'}  onChange={this.handleValueChange}/>\n                                        <Form.Input placeholder={'User Name'} name={'username'}  onChange={this.handleValueChange}/>\n                                        <Form.Input\n                                            fluid\n                                            placeholder={'Password'}\n                                            type='password'\n                                            name={'password'}\n                                            onChange={this.handleValueChange}\n                                        />\n                                        <Button color='teal' fluid size='large' onClick={this.onSignUp}>\n                                            Sign up\n                                        </Button>\n                                    </Segment>\n                                </Form>\n                                :\n                                <Form size='large'>\n                                    <Segment stacked>\n                                        <Form.Input fluid icon='user' iconPosition='left' placeholder={'User Name'} name={'username'}  onChange={this.handleValueChange}/>\n                                        <Form.Input\n                                            fluid\n                                            icon='lock'\n                                            iconPosition='left'\n                                            placeholder={'Password'}\n                                            type='password'\n                                            name={'password'}\n                                            onChange={this.handleValueChange}\n                                        />\n                                        <Button color='teal' fluid size='large' onClick={this.onLogin}>\n                                            Login\n                                        </Button>\n                                    </Segment>\n                                </Form>\n                        }\n                        <br/>\n                        <Button onClick={() => this.setState({isSignUp:!isSignUp})} fluid>Sign up</Button>\n                    </Grid.Column>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({userData}) {\n    return {\n        User : userData.user,\n    }\n}\n\nexport default connect(mapStateToProps)(LoginPage);","import React, {Component} from 'react';\nimport {Menu, Card, Grid, Header, Container} from 'semantic-ui-react'\nimport connect from \"react-redux/es/connect/connect\";\nimport {handleGetMainPageData} from \"../Actions/shareActions\";\nimport {Link} from 'react-router-dom';\n\nclass MainPage extends Component {\n\n    componentDidMount() {\n        this.props.dispatch(handleGetMainPageData())\n    }\n\n    getCategoryNameById = (id) =>\n    {\n        const category = this.props.Categories.find(category => category.id === id);\n        if(category !== undefined)\n        {\n            return category.name\n        }else\n        {\n            return 'none'\n        }\n\n    };\n\n\n    render() {\n        const {Loading, Categories, LatestItem} = this.props;\n        return (\n            <div>\n                {\n                    Loading ? null :\n                        <Container>\n                            <Grid columns={3}>\n                                <Grid.Column>\n                                    <Menu text vertical size={'huge'}>\n                                        <Menu.Item header>Categories</Menu.Item>\n                                        {\n                                            Categories.length > 0 ?\n                                                Categories.map((category) => <Menu.Item\n                                                    key={category.id}\n                                                    name={category.name}\n                                                    as={Link} to={`/categories/${category.id}`}\n                                                />)\n                                                :\n                                                'No Category Add'\n                                        }\n                                    </Menu>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Header style={{paddingTop: 20}} as='h3'>Latest Items</Header>\n                                    <Card.Group>\n                                        {\n                                            LatestItem.length > 0 ?\n                                                LatestItem.map((item) =>\n                                                    <Card key={item.id} fluid as={Link} to={`/items/${item.id}`}>\n                                                        <Card.Content>\n                                                            <Card.Header content={item.name}/>\n                                                            <Card.Meta>Category: {this.getCategoryNameById(item.categoryId)}</Card.Meta>\n                                                            <Card.Meta>Create Date:{item.createDate}</Card.Meta>\n                                                            <Card.Description\n                                                                content={item.description}/>\n                                                        </Card.Content>\n                                                    </Card>)\n                                                :\n                                                null\n                                        }\n                                    </Card.Group>\n                                </Grid.Column>\n                                <Grid.Column/>\n                            </Grid>\n\n                        </Container>\n                }\n\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({userData, categoryData, itemData}) {\n    return {\n        User: userData.user,\n        Loading: categoryData.categories === undefined || itemData.newItems === undefined,\n        Categories: categoryData.categories,\n        LatestItem: itemData.newItems\n    }\n}\n\nexport default connect(mapStateToProps)(MainPage);","import React, {Component} from 'react';\nimport {Menu,Button} from 'semantic-ui-react'\nimport connect from \"react-redux/es/connect/connect\";\nimport { Link } from 'react-router-dom';\nimport {handleLogout} from \"../../Actions/shareActions\";\nclass NavigationMenu extends Component {\n\n    onLogout = () =>\n    {\n        this.props.dispatch(handleLogout(this.props.User.username));\n    };\n\n    render() {\n        const {User} = this.props;\n        return (\n            <Menu attached={'top'}>\n                <Menu.Item as={Link} to='/' >\n                    Main Page\n                </Menu.Item>\n                <Menu.Item as={Link} to='/createcategory' >\n                    Add New Category\n                </Menu.Item>\n                {\n                    User === undefined ?\n                        <Menu.Item position='right' as={Link} to='/login'>\n                            <Button>Log-out</Button>\n                        </Menu.Item>\n                        :\n                        <Menu.Item position='right' onClick={this.onLogout}>\n                            <Button>Log-out</Button>\n                        </Menu.Item>\n                }\n            </Menu>\n        );\n    }\n}\n\nfunction mapStateToProps({userData}) {\n    return {\n        User: userData.user,\n    }\n}\n\nexport default connect(mapStateToProps)(NavigationMenu);","import React, {Component} from 'react';\nimport {Card, Grid, Header, Container,Button,Input,Icon} from 'semantic-ui-react'\nimport connect from \"react-redux/es/connect/connect\";\nimport {handleChangeCategoryName, handleDeleteCategory, handleGetItemsInCategory} from \"../Actions/shareActions\";\nimport {Link,Redirect} from 'react-router-dom';\n\nclass CategoryPage extends Component {\n\n    state={\n        isChangeCategoryName:false,\n        changeName:'',\n        isCategoryDelete:false,\n    };\n\n    componentDidMount() {\n        this.props.dispatch(handleGetItemsInCategory(this.props.match.params.id))\n    }\n\n    handleValueChange = (e, {name, value}) => this.setState({[name]: value});\n\n    getCategoryNameById = (id) =>\n    {\n        const category = this.props.Categories.find(category => category.id === id);\n        if(category !== undefined)\n        {\n            return category.name\n        }else\n        {\n            return 'none'\n        }\n\n    };\n\n    onClickChangeCategory = () =>\n    {\n        if(this.state.isChangeCategoryName)\n        {\n            this.props.dispatch(handleChangeCategoryName(this.props.match.params.id,this.state.changeName));\n        }else\n        {\n            const category = this.props.Categories.find(category => category.id.toString() === this.props.match.params.id.toString());\n            this.setState({changeName:category.name})\n        }\n\n        this.setState({isChangeCategoryName:!this.state.isChangeCategoryName})\n    };\n\n    onDeleteCategory = () =>\n    {\n        this.props.dispatch(handleDeleteCategory(this.props.match.params.id)).then(this.setState({isCategoryDelete:true}))\n    };\n\n    render() {\n        const {Loading, Categories, Items} = this.props;\n        const {isChangeCategoryName,changeName,isCategoryDelete} = this.state;\n        const category = Categories.find(category => category.id.toString() === this.props.match.params.id.toString());\n        if(isCategoryDelete)\n        {\n            return <Redirect to={'/'}/>\n        }\n        return (\n            <div>\n                {\n                    Loading ? null :\n                        <Container>\n                            <Grid>\n                                <Grid.Row columns={2}>\n                                    <Grid.Column>\n                                        {\n                                            isChangeCategoryName ?\n                                                <Input style={{paddingTop: 20}} name={'changeName'} value={changeName} onChange={this.handleValueChange}/>\n                                                :\n                                                <Header style={{paddingTop: 20}} as='h3'>Categories: {category.name}</Header>\n                                        }\n                                    </Grid.Column>\n                                    <Grid.Column style={{marginTop:20}}>\n                                        <Button negative floated={'right'} onClick={this.onDeleteCategory}>Delete This Category</Button>\n                                        <Button floated={'right'} positive={isChangeCategoryName} onClick={this.onClickChangeCategory}>{isChangeCategoryName ? 'Save':'Change Category Name'}</Button>\n                                        <Button icon labelPosition='left' as={Link} to={`/createitem/${category.id}`}>\n                                            <Icon name='plus' />\n                                            Add New Item\n                                        </Button>\n                                    </Grid.Column>\n                                </Grid.Row>\n                                <Grid.Row>\n                                    <Grid.Column>\n                                        <Card.Group>\n                                            {\n                                                Items.map((item) =>\n                                                    <Card key={item.id} fluid as={Link} to={`/items/${item.id}`}>\n                                                        <Card.Content>\n                                                            <Card.Header content={item.name}/>\n                                                            <Card.Meta>Category: {this.getCategoryNameById(item.categoryId)}</Card.Meta>\n                                                            <Card.Meta>Create Date:{item.createDate}</Card.Meta>\n                                                            <Card.Description\n                                                                content={item.description}/>\n                                                        </Card.Content>\n                                                    </Card>)\n                                            }\n                                        </Card.Group>\n                                    </Grid.Column>\n                                </Grid.Row>\n\n                            </Grid>\n                        </Container>\n                }\n\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({userData, categoryData, itemData}) {\n    return {\n        User: userData.user,\n        Loading: categoryData.categories === undefined || itemData.items === undefined,\n        Categories: categoryData.categories,\n        Items: itemData.items\n    }\n}\n\nexport default connect(mapStateToProps)(CategoryPage);","import React, {Component} from 'react';\nimport {Dropdown, Grid, Header, Container, Button, Input} from 'semantic-ui-react'\nimport connect from \"react-redux/es/connect/connect\";\nimport {handleChangeItemDetail, handleGetItemDetailById} from \"../Actions/shareActions\";\n\nclass ItemPage extends Component {\n\n    state = {\n        isChangeDetail: false,\n        changeName: '',\n        changCategoryType: 0,\n        changeDetail: '',\n        errorName: false,\n    };\n\n    componentDidMount() {\n        this.props.dispatch(handleGetItemDetailById(this.props.match.params.id))\n    }\n\n    handleValueChange = (e, {name, value}) => this.setState({[name]: value});\n\n    handleDropDownValueChange = (e, {name, value}) => {\n        this.setState({changCategoryType: value});\n    };\n\n    getCategoryNameById = (id) => {\n        const category = this.props.Categories.find(category => category.id === id);\n        if (category !== undefined) {\n            return category.name\n        } else {\n            return 'none'\n        }\n\n    };\n\n    onClickModify = () => {\n        if (this.state.isChangeDetail) {\n            if (this.checkValidation()) {\n                this.props.dispatch(handleChangeItemDetail(this.props.match.params.id, this.state.changeName, this.state.changCategoryType, this.state.changeDetail));\n                this.setState({isChangeDetail: !this.state.isChangeDetail})\n            }\n        } else {\n            this.setState({\n                changeName: this.props.BrowseItem.name,\n                changCategoryType: this.props.BrowseItem.categoryId,\n                changeDetail: this.props.BrowseItem.description\n            })\n            this.setState({isChangeDetail: !this.state.isChangeDetail})\n        }\n\n\n    };\n\n    onDeleteItem = () => {\n\n    };\n\n    checkValidation = () => {\n        let isValidate = true;\n\n        if (this.state.changeName.trim() === '') {\n            isValidate = false;\n            this.setState({errorName: true});\n        }\n\n        return isValidate\n    };\n\n    render() {\n        const {Loading, Categories, BrowseItem} = this.props;\n        const {isChangeDetail, changeName, changCategoryType, changeDetail, errorName} = this.state;\n        let options = [{key: 1, text: 'none', value: 1}];\n        if (!Loading) {\n            options = Categories.map((category) => {\n                return {key: category.id, text: category.name, value: category.id}\n            })\n        }\n        return (\n            <div>\n                {\n                    Loading ? null :\n                        <Container>\n                            <Header style={{paddingTop: 20}} as='h3'>Name</Header>\n                            {\n                                isChangeDetail ?\n                                    <Input fluid name={'changeName'} error={errorName} value={changeName}\n                                           onChange={this.handleValueChange}/>\n                                    :\n                                    BrowseItem.name\n                            }\n                            <Header style={{paddingTop: 20}} as='h3'>Category</Header>\n                            {\n                                isChangeDetail ?\n                                    <Dropdown label={'CategoryType'} name={'changCategoryType'}\n                                              value={changCategoryType}\n                                              selection options={options} placeholder={'CategoryType'}\n                                              onChange={this.handleDropDownValueChange}/>\n                                    :\n                                    this.getCategoryNameById(BrowseItem.categoryId)\n                            }\n                            <Header style={{paddingTop: 20}} as='h3'>Description </Header>\n                            {\n                                isChangeDetail ?\n                                    <Input fluid name={'changeDetail'} value={changeDetail}\n                                           onChange={this.handleValueChange}/>\n                                    :\n                                    BrowseItem.description\n                            }\n                            <br/>\n                            <br/>\n                            <br/>\n                            <Grid columns={2}>\n                                <Grid.Column>\n                                    <Button fluid onClick={this.onClickModify}>\n                                        {\n                                            isChangeDetail ? 'Save' : 'Modify'\n                                        }\n                                    </Button>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    {\n                                        isChangeDetail ? null :\n                                            <Button negative fluid onClick={this.onDeleteItem}>\n                                                Delete\n                                            </Button>\n                                    }\n                                </Grid.Column>\n                            </Grid>\n                        </Container>\n                }\n\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({userData, categoryData, itemData}) {\n    return {\n        User: userData.user,\n        Loading: categoryData.categories === undefined || itemData.browseItem === undefined,\n        Categories: categoryData.categories,\n        BrowseItem: itemData.browseItem\n    }\n}\n\nexport default connect(mapStateToProps)(ItemPage);","import React, {Component} from 'react';\nimport { Grid, Header, Container, Button, Input} from 'semantic-ui-react'\nimport connect from \"react-redux/es/connect/connect\";\nimport { Link ,Redirect} from 'react-router-dom';\nimport {handleCreateCategory} from \"../Actions/shareActions\";\n\nclass CreateCategoryPage extends Component {\n\n    state = {\n        categoryName: '',\n        errorName: false,\n        isFinish:false\n    };\n\n    componentDidMount() {\n    }\n\n    handleValueChange = (e, {name, value}) => this.setState({[name]: value});\n\n    checkValidation = () => {\n        let isValidate = true;\n\n        if (this.state.categoryName.trim() === '') {\n            isValidate = false;\n            this.setState({errorName: true});\n        }\n\n        return isValidate\n    };\n\n    onCreateCategory = () =>\n    {\n        if(this.checkValidation())\n        {\n            this.props.dispatch(handleCreateCategory(this.state.categoryName)).then(() => this.setState({isFinish:true}))\n        }\n    };\n\n    render() {\n        const {categoryName, isFinish, errorName} = this.state;\n        if(isFinish)\n        {\n            return <Redirect to={'/'}/>\n        }\n\n        return (\n            <div>\n                <Container>\n                    <Header style={{paddingTop: 20}} as='h3'>Category Name</Header>\n                    <Input fluid name={'categoryName'} error={errorName} value={categoryName}\n                           onChange={this.handleValueChange}/>\n                    <Grid columns={2} style={{marginTop:20}}>\n                        <Grid.Column>\n                            <Button fluid negative as={Link} to={'/'}>Back</Button>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Button fluid positive onClick={this.onCreateCategory}>Create</Button>\n                        </Grid.Column>\n                    </Grid>\n                </Container>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({userData}) {\n    return {\n        User: userData.user,\n    }\n}\n\nexport default connect(mapStateToProps)(CreateCategoryPage);","import React, {Component} from 'react';\nimport { Grid, Header, Container, Button, Input} from 'semantic-ui-react'\nimport connect from \"react-redux/es/connect/connect\";\nimport { Link ,Redirect} from 'react-router-dom';\nimport {handleCreateItem} from \"../Actions/shareActions\";\n\nclass CreateCategoryPage extends Component {\n\n    state = {\n        itemName: '',\n        itemDescription: '',\n        errorName: false,\n        isFinish:false\n    };\n\n    componentDidMount() {\n    }\n\n    handleValueChange = (e, {name, value}) => this.setState({[name]: value});\n\n    checkValidation = () => {\n        let isValidate = true;\n\n        if (this.state.itemName.trim() === '') {\n            isValidate = false;\n            this.setState({errorName: true});\n        }\n\n        return isValidate\n    };\n\n    onCreateItem = () =>\n    {\n        if(this.checkValidation())\n        {\n            this.props.dispatch(handleCreateItem(this.state.itemName,this.state.itemDescription,this.props.match.params.id)).then(() => this.setState({isFinish:true}))\n        }\n    };\n\n    render() {\n        const {itemName,itemDescription, isFinish, errorName} = this.state;\n        if(isFinish)\n        {\n            return <Redirect to={'/'}/>\n        }\n\n        return (\n            <div>\n                <Container>\n                    <Header style={{paddingTop: 20}} as='h3'>Item Name</Header>\n                    <Input fluid name={'itemName'} error={errorName} value={itemName}\n                           onChange={this.handleValueChange}/>\n                    <Header style={{paddingTop: 20}} as='h3'>Item Description</Header>\n                    <Input fluid name={'itemDescription'} value={itemDescription}\n                           onChange={this.handleValueChange}/>\n                    <Grid columns={2} style={{marginTop:20}}>\n                        <Grid.Column>\n                            <Button fluid negative as={Link} to={`/categories/${this.props.match.params.id}`}>Back</Button>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Button fluid positive onClick={this.onCreateItem}>Create</Button>\n                        </Grid.Column>\n                    </Grid>\n                </Container>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({userData}) {\n    return {\n        User: userData.user,\n    }\n}\n\nexport default connect(mapStateToProps)(CreateCategoryPage);","import React, {Component, Fragment} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Redirect, Route} from 'react-router-dom';\nimport LoadingBar from 'react-redux-loading';\nimport {connect} from 'react-redux';\nimport LoginPage from \"./Components/LoginPage\";\nimport MainPage from \"./Components/MainPage\";\nimport NavigationMenu from \"./Components/Objects/NavigationMenu\";\nimport CategoryPage from \"./Components/CategoryPage\";\nimport ItemPage from \"./Components/ItemPage\";\nimport CreateCategoryPage from \"./Components/CreateCategoryPage\";\nimport CreateNewItemPage from \"./Components/CreateNewItemPage\";\nimport {receiveUser} from \"./Actions/user\";\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.dispatch(receiveUser({'username':'admin','name':'admin'}))\n    }\n\n    render() {\n        const {loading,isLogin} = this.props;\n\n        return (\n            <Router>\n                <Fragment>\n                    {\n                        isLogin ? <NavigationMenu/> : null\n                    }\n                    <LoadingBar/>\n                    {\n                        loading === true ? null :\n                            <div>\n                                <Route path=\"/login\" component={LoginPage}/>\n                                <PrivateRoute path='/' exact component={MainPage}/>\n                                <PrivateRoute path='/categories/:id' exact component={CategoryPage}/>\n                                <PrivateRoute path='/createcategory' exact component={CreateCategoryPage}/>\n                                <PrivateRoute path='/items/:id' exact component={ItemPage}/>\n                                <PrivateRoute path='/createitem/:id' exact component={CreateNewItemPage}/>\n                            </div>\n                    }\n                </Fragment>\n            </Router>\n        );\n    }\n}\n\nconst authenticationCheck = {\n    isAuthenticated: false,\n    authenticate(cb) {\n        this.isAuthenticated = cb;\n        setTimeout(cb, 100)\n    },\n};\n\nconst PrivateRoute = ({component: Component, ...rest}) => (\n    <Route {...rest} render={(props) => (\n        authenticationCheck.isAuthenticated === true\n            ? <Component {...props} />\n            : <Redirect to={{\n                pathname: '/login',\n                state: {from: props.location}\n            }}/>\n    )}/>\n);\n\nfunction mapStateToProps({userData}) {\n    authenticationCheck.authenticate(userData.user !== undefined);\n    return {\n        isLogin: userData.user !== undefined,\n        loading: false,\n    }\n}\n\nexport default connect(mapStateToProps)(App);","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const logger = (store) => (next) => (action) => {\n    console.group(action.type);\n    console.log('The action : ', action);\n    const  returnValue = next(action);\n    console.log('The new state: ', store.getState());\n    console.groupEnd();\n    return returnValue;\n};\n\nexport default logger;","import thunk from 'redux-thunk';\nimport logger from './logger'\nimport {applyMiddleware} from 'redux'\n\nexport default applyMiddleware(\n    thunk,\n    logger,\n);","import { combineReducers } from 'redux';\nimport itemData from './items';\nimport userData from './user';\nimport categoryData from './categories';\nimport {loadingBarReducer} from 'react-redux-loading';\n\nexport default combineReducers({\n    itemData,\n    userData,\n    categoryData,\n    loadingBar: loadingBarReducer\n})","import {RECEIVE_ITEM_DETAIL, RECEIVE_ITEMS, RECEIVE_LATEST_ITEMS} from \"../Utilities/Constants/ActionTypes\";\n\nexport default function itemData(state = {}, action) {\n    switch (action.type) {\n        case RECEIVE_ITEMS :\n            return{\n                ...state,\n                items:action.items\n            };\n        case RECEIVE_LATEST_ITEMS :\n            return{\n                ...state,\n                newItems:action.items\n            };\n        case RECEIVE_ITEM_DETAIL :\n            return{\n                ...state,\n                browseItem:action.item\n            }\n        default :\n            return state;\n    }\n}","import {RECEIVE_USER} from \"../Utilities/Constants/ActionTypes\";\n\nexport default function userData(state = {}, action) {\n    switch (action.type) {\n        case RECEIVE_USER :\n            return{\n                ...state,\n                user:action.user\n            };\n        default :\n            return state;\n    }\n}","import {RECEIVE_CATEGORIES} from \"../Utilities/Constants/ActionTypes\";\n\nexport default function categoryData(state = {}, action) {\n    switch (action.type) {\n        case RECEIVE_CATEGORIES :\n            return{\n                ...state,\n                categories:action.categories\n            };\n        default :\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport middleware from './Middleware'\nimport reducer from './Reducers'\n\nconst store = createStore(reducer,middleware);\n\nReactDOM.render(\n    <Provider store ={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}
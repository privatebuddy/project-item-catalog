{"version":3,"sources":["Utilities/Constants/Constants.js","Utilities/DataRequest.js","Utilities/Constants/ActionTypes.js","Actions/user.js","Actions/items.js","Actions/categories.js","Actions/shareActions.js","Components/LoginPage.js","Components/MainPage.js","Components/Objects/NavigationMenu.js","Components/CategoryPage.js","Components/ItemPage.js","Components/CreateCategoryPage.js","Components/CreateNewItemPage.js","App.js","serviceWorker.js","Middleware/logger.js","Middleware/index.js","Reducers/index.js","Reducers/items.js","Reducers/user.js","Reducers/categories.js","index.js"],"names":["server_path","getCategories","requestDataFromServer","arguments","length","undefined","getItemDetailById","itemId","token","concat","endPoint","method","data","contentType","access_token","axios","url","headers","Content-Type","Authorization","catch","error","response","console","log","request","message","RECEIVE_ITEMS","RECEIVE_CATEGORIES","RECEIVE_USER","RECEIVE_LATEST_ITEMS","RECEIVE_ITEM_DETAIL","receiveUser","user","type","receiveLatestItem","items","receiveItemDetail","item","receiveCategories","categories","handleCreateNewUser","name","username","password","dispatch","showLoading","formData","FormData","append","createUser","then","result","hideLoading","handleLogin","login","handleLogout","logout","handleGetItemsInCategory","categoryId","getItemsInCategory","handleChangeCategoryName","newName","updateCategoryName","latestItems","handleChangeItemDetail","descriptions","description","toString","updateItemDetail","handleDeleteCategory","deleteCategory","handleCreateCategory","createCategory","handleCreateItem","createItem","handleLoginWithGoogle","loginWithGoogle","handleRegisterWithGoogle","createUserWithGoogle","handleDeleteItem","deleteItem","LoginPage","state","newUsername","newPassWord","newPassWordError","isSignUp","onLogin","_this","props","onSignUp","setState","handleValueChange","e","_ref","value","Object","defineProperty","onSignIn","googleUser","id_token","getAuthResponse","onSignInError","onSignUpWithGoogle","onSignUpError","_this2","this","User","location","react_default","a","createElement","Redirect","to","pathname","className","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Form","size","Segment","stacked","Input","placeholder","onChange","fluid","Button","onClick","icon","iconPosition","GoogleLogin","clientId","buttonText","onSuccess","onFailure","Icon","columns","Component","connect","_ref2","userData","MainPage","getCategoryNameById","id","category","Categories","find","handleGetMainPageData","_this$props","Loading","LatestItem","Container","Menu","text","vertical","Item","header","map","key","Link","paddingTop","Card","Group","Content","content","Meta","createDate","Description","categoryData","itemData","newItems","NavigationMenu","onLogout","attached","position","CategoryPage","isChangeCategoryName","changeName","isCategoryDelete","onClickChangeCategory","match","params","onDeleteCategory","Items","_this$state","Row","marginTop","negative","floated","positive","labelPosition","ItemPage","isChangeDetail","changCategoryType","changeDetail","errorName","isDelete","handleDropDownValueChange","onClickModify","checkValidation","BrowseItem","onDeleteItem","isValidate","trim","options","Dropdown","label","selection","_ref3","browseItem","CreateCategoryPage","categoryName","isFinish","onCreateCategory","itemName","itemDescription","onCreateItem","App","loading","isLogin","BrowserRouter","react","Objects_NavigationMenu","build_default","Route","path","component","App_PrivateRoute","exact","CreateNewItemPage","authenticationCheck","isAuthenticated","authenticate","cb","setTimeout","PrivateRoute","rest","objectWithoutProperties","assign","render","from","Boolean","window","hostname","logger","store","next","action","group","returnValue","getState","groupEnd","applyMiddleware","thunk","combineReducers","objectSpread","refresher_token","refresh_token","loadingBar","loadingBarReducer","createStore","reducer","middleware","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f19c5156.chunk.js","sourcesContent":["export const server_path = \"http://3.0.95.10/\";","import * as axios from \"axios\";\nimport {server_path} from \"./Constants/Constants\";\n\n\nexport function createUser(name='', username='', password='') {\n    const endPoint = `createuser`;\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('username', username);\n    formData.append('password', password);\n    formData.append('type', '1');\n    return requestDataFromServer(endPoint,'POST',formData,'application/json');\n}\n\nexport function createUserWithGoogle(token='') {\n    const endPoint = `creategoogleuser`;\n    const formData = new FormData();\n    formData.append('token', token);\n    return requestDataFromServer(endPoint,'POST',formData,'application/json');\n}\n\nexport function loginWithGoogle(token='')\n{\n    const endPoint = `logingoogle`;\n    const formData = new FormData();\n    formData.append('token', token);\n\n    return requestDataFromServer(endPoint,'POST',formData,'application/json');\n}\n\nexport function login(username='',password='')\n{\n    const endPoint = `login`;\n    const formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n\n    return requestDataFromServer(endPoint,'POST',formData,'application/json');\n}\nexport function logout(username='',token='')\n{\n    const endPoint = `logout/access`;\n    const formData = new FormData();\n    formData.append('username', username);\n\n    return requestDataFromServer(endPoint,'POST',formData,'application/json',token);\n}\n\nexport function getCategories(token='')\n{\n    const endPoint = `category`;\n    return requestDataFromServer(endPoint,'GET',null,'application/json',token);\n}\n\nexport function createCategory(name='',token='') {\n    const endPoint = `createcategory`;\n    const formData = new FormData();\n    formData.append('name', name);\n    return requestDataFromServer(endPoint,'POST',formData,'application/json',token);\n}\n\nexport function deleteCategory(categoryId=0,token) {\n    const endPoint = `deletecategory?id=${categoryId}`;\n    return requestDataFromServer(endPoint,'DELETE',null,'application/json',token);\n}\n\nexport function getItemsInCategory(categoryId=0,token)\n{\n    const endPoint = `getcategory?categoryId=${categoryId}`;\n    return requestDataFromServer(endPoint,'GET',null,'application/json',token);\n}\n\nexport function updateCategoryName(categoryId=0,newName='',token='') {\n    const endPoint = `updatecategory`;\n    const formData = new FormData();\n    formData.append('id', categoryId);\n    formData.append('name', newName);\n    return requestDataFromServer(endPoint,'PUT',formData,'application/json',token);\n}\n\nexport function getItemDetailById(itemId=0,token) {\n    const endPoint = `getitem?id=${itemId}`;\n    return requestDataFromServer(endPoint,'GET',null,'application/json',token);\n}\n\nexport function createItem(name='',description='',categoryId=0,token='')\n{\n    const endPoint = `createitem`;\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('description', description);\n    formData.append('category_id', categoryId);\n    return requestDataFromServer(endPoint,'POST',formData,'application/json',token);\n}\n\nexport function updateItemDetail(itemId=0,name='',categoryId=0,description='',token='') {\n    const endPoint = `updateitem`;\n    const formData = new FormData();\n    formData.append('id', itemId);\n    formData.append('name', name);\n    formData.append('categoryid', categoryId.toString());\n    formData.append('description', description);\n    return requestDataFromServer(endPoint,'PUT',formData,'application/json',token);\n}\n\nexport function deleteItem(itemId=0,token='') {\n    const endPoint = `deleteitem?id=${itemId}`;\n    return requestDataFromServer(endPoint,'DELETE',null,'application/json',token);\n}\n\nfunction requestDataFromServer(endPoint='',method='',data=null,contentType='',access_token='')\n{\n    return axios({\n        url: server_path+endPoint,\n        method: method,\n        headers: {\n            'Content-Type': contentType,\n            'Authorization': `Bearer ${access_token}`\n        },\n        data: data\n    }).catch(function (error) {\n        if (error.response) {\n            console.log(error.response)\n        } else if (error.request) {\n            console.log(error.request);\n        } else {\n            console.log('Error', error.message);\n        }\n    });\n}","export const RECEIVE_ITEMS = 'RECEIVE_ITEMS';\nexport const RECEIVE_CATEGORIES = 'RECEIVE_CATEGORIES';\nexport const RECEIVE_USER = 'RECEIVE_USER';\nexport const RECEIVE_LATEST_ITEMS = 'RECEIVE_LATEST_ITEMS';\nexport const RECEIVE_ITEM_DETAIL = 'RECEIVE_ITEM_DETAIL';","import {RECEIVE_USER} from \"../Utilities/Constants/ActionTypes\";\n\nexport function receiveUser(user) {\n    return{\n        type: RECEIVE_USER,\n        user\n    }\n}\n","import {RECEIVE_ITEM_DETAIL, RECEIVE_ITEMS, RECEIVE_LATEST_ITEMS} from \"../Utilities/Constants/ActionTypes\";\n\nexport function receiveItems(items) {\n    return{\n        type: RECEIVE_ITEMS,\n        items\n    }\n}\n\nexport function receiveLatestItem(items) {\n    return{\n        type: RECEIVE_LATEST_ITEMS,\n        items\n    }\n}\n\nexport function receiveItemDetail(item) {\n    return{\n        type: RECEIVE_ITEM_DETAIL,\n        item\n    }\n}\n","import {RECEIVE_CATEGORIES} from \"../Utilities/Constants/ActionTypes\";\n\nexport function receiveCategories(categories) {\n    return{\n        type: RECEIVE_CATEGORIES,\n        categories\n    }\n}\n","import {showLoading, hideLoading} from 'react-redux-loading';\nimport {\n    createUser,\n    login,\n    logout,\n    getCategories,\n    getItemsInCategory,\n    updateCategoryName,\n    getItemDetailById,\n    updateItemDetail,\n    deleteCategory,\n    createCategory,\n    createItem,\n    loginWithGoogle,\n    deleteItem, createUserWithGoogle\n} from \"../Utilities/DataRequest\";\nimport {receiveUser} from \"./user\";\nimport {receiveItemDetail, receiveItems, receiveLatestItem} from \"./items\";\nimport {receiveCategories} from \"./categories\";\n\nexport function handleCreateNewUser(name,username,password) {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return createUser(name,username,password)\n            .then((result) => {\n                dispatch(hideLoading());\n            })\n    }\n}\n\nexport function handleLogin(username,password) {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return login(username,password)\n            .then((result) => {\n                dispatch(receiveUser(result.data));\n                dispatch(hideLoading());\n            })\n    }\n}\n\nexport function handleLogout(username,token) {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return logout(username,token)\n            .then((result) => {\n                dispatch(receiveUser(undefined));\n                dispatch(hideLoading());\n            })\n    }\n}\n\nexport function handleGetMainPageData(token='') {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return getCategories(token)\n            .then((result) => {\n                dispatch(receiveCategories(result.data.categories));\n                dispatch(receiveLatestItem(result.data.latestItems));\n                dispatch(hideLoading());\n            })\n    }\n}\n\nexport function handleGetItemsInCategory(categoryId,token) {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return getItemsInCategory(categoryId,token)\n            .then((result) => {\n                dispatch(receiveItems(result.data));\n                dispatch(hideLoading());\n            })\n    }\n}\n\nexport function handleChangeCategoryName(categoryId,name,token) {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return updateCategoryName(categoryId,name,token)\n            .then((result) => getCategories(token)\n                .then((result) => {\n                dispatch(receiveCategories(result.data.categories));\n                dispatch(receiveLatestItem(result.data.latestItems));\n                dispatch(hideLoading());\n            }))\n    }\n}\n\nexport function handleGetItemDetailById(itemId,token) {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return getItemDetailById(itemId,token)\n            .then((result) => {\n                dispatch(receiveItemDetail(result.data.item));\n                dispatch(receiveCategories(result.data.categories));\n                dispatch(hideLoading());\n            })\n    }\n}\n\nexport function handleChangeItemDetail(itemId,name,categoryId,descriptions,token) {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return updateItemDetail(itemId,name,categoryId,descriptions,token)\n            .then((result) => getItemDetailById(itemId,token)\n                .then((result) => {\n                    dispatch(receiveItemDetail(result.data.item));\n                    dispatch(receiveCategories(result.data.categories));\n                    dispatch(hideLoading());\n                })\n            )\n    }\n}\n\nexport function handleDeleteCategory(categoryId,token) {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return deleteCategory(categoryId,token)\n            .then((result) => getCategories(token)\n                .then((result) => {\n                    dispatch(receiveCategories(result.data.categories));\n                    dispatch(receiveLatestItem(result.data.latestItems));\n                    dispatch(hideLoading());\n                })\n            )\n    }\n}\n\nexport function handleCreateCategory(name,token) {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return createCategory(name,token)\n            .then((result) =>\n                dispatch(hideLoading())\n            )\n    }\n}\n\nexport function handleCreateItem(name,description,categoryId,token) {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return createItem(name,description,categoryId,token)\n            .then((result) =>\n                dispatch(hideLoading())\n            )\n    }\n}\n\n\nexport function handleLoginWithGoogle(token) {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return loginWithGoogle(token)\n            .then((result) => {\n                dispatch(receiveUser(result.data));\n                dispatch(hideLoading());\n            })\n    }\n}\n\nexport function handleRegisterWithGoogle(token) {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return createUserWithGoogle(token)\n            .then((result) => {\n                dispatch(receiveUser(result.data));\n                dispatch(hideLoading());\n            })\n    }\n}\n\nexport function handleDeleteItem(itemId,token) {\n    return (dispatch) => {\n        dispatch(showLoading());\n        return deleteItem(itemId,token)\n            .then((result) =>\n                dispatch(hideLoading())\n            )\n    }\n}\n\n","import React, {Component} from 'react';\nimport {Button, Form, Grid, Header, Segment,Icon} from 'semantic-ui-react'\nimport connect from \"react-redux/es/connect/connect\";\nimport { Redirect} from 'react-router-dom';\nimport {\n    handleCreateNewUser,\n    handleLogin,\n    handleLoginWithGoogle,\n    handleRegisterWithGoogle\n} from \"../Actions/shareActions\";\nimport GoogleLogin from 'react-google-login';\nclass LoginPage extends Component {\n\n    state = {\n        name:'',\n        username:'',\n        password:'',\n        newUsername:'',\n        newPassWord:'',\n        newPassWordError:false,\n        isSignUp:false\n    };\n\n\n\n    onLogin = () =>{\n        this.props.dispatch(handleLogin(this.state.username,this.state.password))\n    };\n\n    onSignUp = () =>{\n        this.props.dispatch(handleCreateNewUser(this.state.name,this.state.newUsername,this.state.newPassWord)).then(() => this.setState({isSignUp:!this.state.isSignUp,name:'',\n            username:'',\n            password:'',\n            newUsername:'',\n            newPassWord:'',}))\n    };\n\n    handleValueChange = (e, { name, value }) => this.setState({ [name]: value });\n\n    onSignIn = (googleUser) =>\n    {\n        const id_token = googleUser.getAuthResponse().id_token;\n\n        this.props.dispatch(handleLoginWithGoogle(id_token));\n    };\n\n    onSignInError = () =>\n    {\n\n    };\n\n    onSignUpWithGoogle = (googleUser) =>\n    {\n        const id_token = googleUser.getAuthResponse().id_token;\n\n        this.props.dispatch(handleRegisterWithGoogle(id_token));\n    };\n\n    onSignUpError = () =>\n    {\n\n    };\n\n\n    render() {\n        const {User} = this.props;\n        const {isSignUp} = this.state;\n\n        if(User !== undefined)\n        {\n            if(this.props.location.state !== undefined)\n            {\n                return (<Redirect to={this.props.location.pathname} />);\n            }else\n            {\n\n                return (<Redirect to={\"/\"} />);\n            }\n        }\n\n        return (\n            <div className='login-form'>\n                <style>{`\n      body > div,\n      body > div > div,\n      body > div > div > div.login-form {\n        height: 50%;\n      }npm\n    `}</style>\n                <Grid textAlign='center' style={{height: '100%'}} verticalAlign='middle'>\n                    <Grid.Column style={{maxWidth: 450}}>\n                        <Header as='h2' color='teal' textAlign='center'>\n                            {\n                                isSignUp ?\n                                    'Please fill in the detail'\n                                    :\n                                    'Project Item Category'\n                            }\n                        </Header>\n                        {\n                            isSignUp ?\n                                <Form size='large'>\n                                    <Segment stacked>\n                                        <Form.Input placeholder={'Name'} name={'name'}  onChange={this.handleValueChange}/>\n                                        <Form.Input placeholder={'User Name'} name={'newUsername'}  onChange={this.handleValueChange}/>\n                                        <Form.Input\n                                            fluid\n                                            placeholder={'Password'}\n                                            type='password'\n                                            name={'newPassWord'}\n                                            onChange={this.handleValueChange}\n                                        />\n                                        <Button color='teal' fluid size='large' onClick={this.onSignUp}>\n                                            Sign up\n                                        </Button>\n                                    </Segment>\n                                </Form>\n                                :\n                                <Form size='large'>\n                                    <Segment stacked>\n                                        <Form.Input fluid icon='user' iconPosition='left' placeholder={'User Name'} name={'username'}  onChange={this.handleValueChange}/>\n                                        <Form.Input\n                                            fluid\n                                            icon='lock'\n                                            iconPosition='left'\n                                            placeholder={'Password'}\n                                            type='password'\n                                            name={'password'}\n                                            onChange={this.handleValueChange}\n                                        />\n                                        <Button color='teal' fluid size='large' onClick={this.onLogin}>\n                                            Login\n                                        </Button>\n                                        <br/>\n                                        <Button fluid color='google plus' as={GoogleLogin} clientId=\"618789413227-rfh1jsedtnhs052ofiko10l639ak5h7v.apps.googleusercontent.com\"\n                                                buttonText=\"Login\"\n                                                onSuccess={this.onSignIn}\n                                                onFailure={this.onSignInError}>\n                                            <Icon name='google' /> Login With Google\n                                        </Button>\n                                    </Segment>\n                                </Form>\n                        }\n                        <br/>\n                        <Grid columns={2}>\n                            <Grid.Column>\n                                <Button onClick={() => this.setState({isSignUp:!isSignUp})} fluid>Sign up</Button>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Button fluid color='google plus' as={GoogleLogin} clientId=\"618789413227-rfh1jsedtnhs052ofiko10l639ak5h7v.apps.googleusercontent.com\"\n                                        buttonText=\"Login\"\n                                        onSuccess={this.onSignUpWithGoogle}\n                                        onFailure={this.onSignUpError}>\n                                    <Icon name='google' /> Sign-up with Google\n                                </Button>\n                            </Grid.Column>\n                        </Grid>\n\n                    </Grid.Column>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({userData}) {\n    return {\n        User : userData.user,\n    }\n}\n\nexport default connect(mapStateToProps)(LoginPage);","import React, {Component} from 'react';\nimport {Menu, Card, Grid, Header, Container} from 'semantic-ui-react'\nimport connect from \"react-redux/es/connect/connect\";\nimport {handleGetMainPageData} from \"../Actions/shareActions\";\nimport {Link} from 'react-router-dom';\n\nclass MainPage extends Component {\n\n    componentDidMount() {\n        this.props.dispatch(handleGetMainPageData(this.props.User.access_token))\n    }\n\n    getCategoryNameById = (id) =>\n    {\n        const category = this.props.Categories.find(category => category.id === id);\n        if(category !== undefined)\n        {\n            return category.name\n        }else\n        {\n            return 'none'\n        }\n\n    };\n\n\n    render() {\n        const {Loading, Categories, LatestItem} = this.props;\n        return (\n            <div>\n                {\n                    Loading ? null :\n                        <Container>\n                            <Grid columns={3}>\n                                <Grid.Column>\n                                    <Menu text vertical size={'huge'}>\n                                        <Menu.Item header>Categories</Menu.Item>\n                                        {\n                                            Categories.length > 0 ?\n                                                Categories.map((category) => <Menu.Item\n                                                    key={category.id}\n                                                    name={category.name}\n                                                    as={Link} to={`/categories/${category.id}`}\n                                                />)\n                                                :\n                                                'No Category Add'\n                                        }\n                                    </Menu>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    <Header style={{paddingTop: 20}} as='h3'>Latest Items</Header>\n                                    <Card.Group>\n                                        {\n                                            LatestItem.length > 0 ?\n                                                LatestItem.map((item) =>\n                                                    <Card key={item.id} fluid as={Link} to={`/items/${item.id}`}>\n                                                        <Card.Content>\n                                                            <Card.Header content={item.name}/>\n                                                            <Card.Meta>Category: {this.getCategoryNameById(item.categoryId)}</Card.Meta>\n                                                            <Card.Meta>Create Date:{item.createDate}</Card.Meta>\n                                                            <Card.Description\n                                                                content={item.description}/>\n                                                        </Card.Content>\n                                                    </Card>)\n                                                :\n                                                null\n                                        }\n                                    </Card.Group>\n                                </Grid.Column>\n                                <Grid.Column/>\n                            </Grid>\n\n                        </Container>\n                }\n\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({userData, categoryData, itemData}) {\n    return {\n        User: userData.user,\n        Loading: categoryData.categories === undefined || itemData.newItems === undefined,\n        Categories: categoryData.categories,\n        LatestItem: itemData.newItems\n    }\n}\n\nexport default connect(mapStateToProps)(MainPage);","import React, {Component} from 'react';\nimport {Menu,Button} from 'semantic-ui-react'\nimport connect from \"react-redux/es/connect/connect\";\nimport { Link } from 'react-router-dom';\nimport {handleLogout} from \"../../Actions/shareActions\";\nclass NavigationMenu extends Component {\n\n    onLogout = () =>\n    {\n        this.props.dispatch(handleLogout(this.props.User.username,this.props.User.access_token));\n    };\n\n    render() {\n        const {User} = this.props;\n        return (\n            <Menu attached={'top'}>\n                <Menu.Item as={Link} to='/' >\n                    Main Page\n                </Menu.Item>\n                <Menu.Item as={Link} to='/createcategory' >\n                    Add New Category\n                </Menu.Item>\n                {\n                    User === undefined ?\n                        <Menu.Item position='right' as={Link} to='/login'>\n                            <Button>Log-out</Button>\n                        </Menu.Item>\n                        :\n                        <Menu.Item position='right' onClick={this.onLogout}>\n                            <Button>Log-out</Button>\n                        </Menu.Item>\n                }\n            </Menu>\n        );\n    }\n}\n\nfunction mapStateToProps({userData}) {\n    return {\n        User: userData.user,\n    }\n}\n\nexport default connect(mapStateToProps)(NavigationMenu);","import React, {Component} from 'react';\nimport {Card, Grid, Header, Container,Button,Input,Icon} from 'semantic-ui-react'\nimport connect from \"react-redux/es/connect/connect\";\nimport {handleChangeCategoryName, handleDeleteCategory, handleGetItemsInCategory} from \"../Actions/shareActions\";\nimport {Link,Redirect} from 'react-router-dom';\n\nclass CategoryPage extends Component {\n\n    state={\n        isChangeCategoryName:false,\n        changeName:'',\n        isCategoryDelete:false,\n    };\n\n    componentDidMount() {\n        this.props.dispatch(handleGetItemsInCategory(this.props.match.params.id,this.props.User.access_token))\n    }\n\n    handleValueChange = (e, {name, value}) => this.setState({[name]: value});\n\n    getCategoryNameById = (id) =>\n    {\n        const category = this.props.Categories.find(category => category.id === id);\n        if(category !== undefined)\n        {\n            return category.name\n        }else\n        {\n            return 'none'\n        }\n\n    };\n\n    onClickChangeCategory = () =>\n    {\n        if(this.state.isChangeCategoryName)\n        {\n            this.props.dispatch(handleChangeCategoryName(this.props.match.params.id,this.state.changeName,this.props.User.access_token));\n        }else\n        {\n            const category = this.props.Categories.find(category => category.id.toString() === this.props.match.params.id.toString());\n            this.setState({changeName:category.name})\n        }\n\n        this.setState({isChangeCategoryName:!this.state.isChangeCategoryName})\n    };\n\n    onDeleteCategory = () =>\n    {\n        this.props.dispatch(handleDeleteCategory(this.props.match.params.id,this.props.User.access_token)).then(this.setState({isCategoryDelete:true}))\n    };\n\n    render() {\n        const {Loading, Categories, Items} = this.props;\n        const {isChangeCategoryName,changeName,isCategoryDelete} = this.state;\n        const category = Categories.find(category => category.id.toString() === this.props.match.params.id.toString());\n        if(isCategoryDelete)\n        {\n            return <Redirect to={'/'}/>\n        }\n        return (\n            <div>\n                {\n                    Loading ? null :\n                        <Container>\n                            <Grid>\n                                <Grid.Row columns={2}>\n                                    <Grid.Column>\n                                        {\n                                            isChangeCategoryName ?\n                                                <Input style={{paddingTop: 20}} name={'changeName'} value={changeName} onChange={this.handleValueChange}/>\n                                                :\n                                                <Header style={{paddingTop: 20}} as='h3'>Categories: {category.name}</Header>\n                                        }\n                                    </Grid.Column>\n                                    <Grid.Column style={{marginTop:20}}>\n                                        <Button negative floated={'right'} onClick={this.onDeleteCategory}>Delete This Category</Button>\n                                        <Button floated={'right'} positive={isChangeCategoryName} onClick={this.onClickChangeCategory}>{isChangeCategoryName ? 'Save':'Change Category Name'}</Button>\n                                        <Button icon labelPosition='left' as={Link} to={`/createitem/${category.id}`}>\n                                            <Icon name='plus' />\n                                            Add New Item\n                                        </Button>\n                                    </Grid.Column>\n                                </Grid.Row>\n                                <Grid.Row>\n                                    <Grid.Column>\n                                        <Card.Group>\n                                            {\n                                                Items.map((item) =>\n                                                    <Card key={item.id} fluid as={Link} to={`/items/${item.id}`}>\n                                                        <Card.Content>\n                                                            <Card.Header content={item.name}/>\n                                                            <Card.Meta>Category: {this.getCategoryNameById(item.categoryId)}</Card.Meta>\n                                                            <Card.Meta>Create Date:{item.createDate}</Card.Meta>\n                                                            <Card.Description\n                                                                content={item.description}/>\n                                                        </Card.Content>\n                                                    </Card>)\n                                            }\n                                        </Card.Group>\n                                    </Grid.Column>\n                                </Grid.Row>\n\n                            </Grid>\n                        </Container>\n                }\n\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({userData, categoryData, itemData}) {\n    return {\n        User: userData.user,\n        Loading: categoryData.categories === undefined || itemData.items === undefined,\n        Categories: categoryData.categories,\n        Items: itemData.items\n    }\n}\n\nexport default connect(mapStateToProps)(CategoryPage);","import React, {Component} from 'react';\nimport {Dropdown, Grid, Header, Container, Button, Input} from 'semantic-ui-react'\nimport connect from \"react-redux/es/connect/connect\";\nimport {handleChangeItemDetail, handleDeleteItem, handleGetItemDetailById} from \"../Actions/shareActions\";\nimport {Redirect} from 'react-router-dom';\n\nclass ItemPage extends Component {\n\n    state = {\n        isChangeDetail: false,\n        changeName: '',\n        changCategoryType: 0,\n        changeDetail: '',\n        errorName: false,\n        isDelete:false\n    };\n\n    componentDidMount() {\n        this.props.dispatch(handleGetItemDetailById(this.props.match.params.id,this.props.User.access_token))\n    }\n\n    handleValueChange = (e, {name, value}) => this.setState({[name]: value});\n\n    handleDropDownValueChange = (e, {name, value}) => {\n        this.setState({changCategoryType: value});\n    };\n\n    getCategoryNameById = (id) => {\n        const category = this.props.Categories.find(category => category.id === id);\n        if (category !== undefined) {\n            return category.name\n        } else {\n            return 'none'\n        }\n\n    };\n\n    onClickModify = () => {\n        if (this.state.isChangeDetail) {\n            if (this.checkValidation()) {\n                this.props.dispatch(handleChangeItemDetail(this.props.match.params.id, this.state.changeName, this.state.changCategoryType, this.state.changeDetail,this.props.User.access_token));\n                this.setState({isChangeDetail: !this.state.isChangeDetail})\n            }\n        } else {\n            this.setState({\n                changeName: this.props.BrowseItem.name,\n                changCategoryType: this.props.BrowseItem.categoryId,\n                changeDetail: this.props.BrowseItem.description\n            })\n            this.setState({isChangeDetail: !this.state.isChangeDetail})\n        }\n    };\n\n    onDeleteItem = () => {\n        this.props.dispatch(handleDeleteItem(this.props.BrowseItem.categoryId,this.props.User.access_token)).then(() => this.setState({isDelete:true}))\n    };\n\n    checkValidation = () => {\n        let isValidate = true;\n\n        if (this.state.changeName.trim() === '') {\n            isValidate = false;\n            this.setState({errorName: true});\n        }\n\n        return isValidate\n    };\n\n    render() {\n        const {Loading, Categories, BrowseItem} = this.props;\n        const {isChangeDetail, changeName, changCategoryType, changeDetail, errorName,isDelete} = this.state;\n        let options = [{key: 1, text: 'none', value: 1}];\n        if (!Loading) {\n            options = Categories.map((category) => {\n                return {key: category.id, text: category.name, value: category.id}\n            })\n        }\n        if(isDelete)\n        {\n            return <Redirect to={`/`}/>\n        }\n\n        return (\n            <div>\n                {\n                    Loading ? null :\n                        <Container>\n                            <Header style={{paddingTop: 20}} as='h3'>Name</Header>\n                            {\n                                isChangeDetail ?\n                                    <Input fluid name={'changeName'} error={errorName} value={changeName}\n                                           onChange={this.handleValueChange}/>\n                                    :\n                                    BrowseItem.name\n                            }\n                            <Header style={{paddingTop: 20}} as='h3'>Category</Header>\n                            {\n                                isChangeDetail ?\n                                    <Dropdown label={'CategoryType'} name={'changCategoryType'}\n                                              value={changCategoryType}\n                                              selection options={options} placeholder={'CategoryType'}\n                                              onChange={this.handleDropDownValueChange}/>\n                                    :\n                                    this.getCategoryNameById(BrowseItem.categoryId)\n                            }\n                            <Header style={{paddingTop: 20}} as='h3'>Description </Header>\n                            {\n                                isChangeDetail ?\n                                    <Input fluid name={'changeDetail'} value={changeDetail}\n                                           onChange={this.handleValueChange}/>\n                                    :\n                                    BrowseItem.description\n                            }\n                            <br/>\n                            <br/>\n                            <br/>\n                            <Grid columns={2}>\n                                <Grid.Column>\n                                    <Button fluid onClick={this.onClickModify}>\n                                        {\n                                            isChangeDetail ? 'Save' : 'Modify'\n                                        }\n                                    </Button>\n                                </Grid.Column>\n                                <Grid.Column>\n                                    {\n                                        isChangeDetail ? null :\n                                            <Button negative fluid onClick={this.onDeleteItem}>\n                                                Delete\n                                            </Button>\n                                    }\n                                </Grid.Column>\n                            </Grid>\n                        </Container>\n                }\n\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({userData, categoryData, itemData}) {\n    return {\n        User: userData.user,\n        Loading: categoryData.categories === undefined || itemData.browseItem === undefined,\n        Categories: categoryData.categories,\n        BrowseItem: itemData.browseItem\n    }\n}\n\nexport default connect(mapStateToProps)(ItemPage);","import React, {Component} from 'react';\nimport { Grid, Header, Container, Button, Input} from 'semantic-ui-react'\nimport connect from \"react-redux/es/connect/connect\";\nimport { Link ,Redirect} from 'react-router-dom';\nimport {handleCreateCategory} from \"../Actions/shareActions\";\n\nclass CreateCategoryPage extends Component {\n\n    state = {\n        categoryName: '',\n        errorName: false,\n        isFinish:false\n    };\n\n    componentDidMount() {\n    }\n\n    handleValueChange = (e, {name, value}) => this.setState({[name]: value});\n\n    checkValidation = () => {\n        let isValidate = true;\n\n        if (this.state.categoryName.trim() === '') {\n            isValidate = false;\n            this.setState({errorName: true});\n        }\n\n        return isValidate\n    };\n\n    onCreateCategory = () =>\n    {\n        if(this.checkValidation())\n        {\n            this.props.dispatch(handleCreateCategory(this.state.categoryName,this.props.User.access_token)).then(() => this.setState({isFinish:true}))\n        }\n    };\n\n    render() {\n        const {categoryName, isFinish, errorName} = this.state;\n        if(isFinish)\n        {\n            return <Redirect to={'/'}/>\n        }\n\n        return (\n            <div>\n                <Container>\n                    <Header style={{paddingTop: 20}} as='h3'>Category Name</Header>\n                    <Input fluid name={'categoryName'} error={errorName} value={categoryName}\n                           onChange={this.handleValueChange}/>\n                    <Grid columns={2} style={{marginTop:20}}>\n                        <Grid.Column>\n                            <Button fluid negative as={Link} to={'/'}>Back</Button>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Button fluid positive onClick={this.onCreateCategory}>Create</Button>\n                        </Grid.Column>\n                    </Grid>\n                </Container>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({userData}) {\n    return {\n        User: userData.user,\n    }\n}\n\nexport default connect(mapStateToProps)(CreateCategoryPage);","import React, {Component} from 'react';\nimport { Grid, Header, Container, Button, Input} from 'semantic-ui-react'\nimport connect from \"react-redux/es/connect/connect\";\nimport { Link ,Redirect} from 'react-router-dom';\nimport {handleCreateItem} from \"../Actions/shareActions\";\n\nclass CreateCategoryPage extends Component {\n\n    state = {\n        itemName: '',\n        itemDescription: '',\n        errorName: false,\n        isFinish:false\n    };\n\n    componentDidMount() {\n    }\n\n    handleValueChange = (e, {name, value}) => this.setState({[name]: value});\n\n    checkValidation = () => {\n        let isValidate = true;\n\n        if (this.state.itemName.trim() === '') {\n            isValidate = false;\n            this.setState({errorName: true});\n        }\n\n        return isValidate\n    };\n\n    onCreateItem = () =>\n    {\n        if(this.checkValidation())\n        {\n            this.props.dispatch(handleCreateItem(this.state.itemName,this.state.itemDescription,this.props.match.params.id,this.props.User.access_token)).then(() => this.setState({isFinish:true}))\n        }\n    };\n\n    render() {\n        const {itemName,itemDescription, isFinish, errorName} = this.state;\n        if(isFinish)\n        {\n            return <Redirect to={'/'}/>\n        }\n\n        return (\n            <div>\n                <Container>\n                    <Header style={{paddingTop: 20}} as='h3'>Item Name</Header>\n                    <Input fluid name={'itemName'} error={errorName} value={itemName}\n                           onChange={this.handleValueChange}/>\n                    <Header style={{paddingTop: 20}} as='h3'>Item Description</Header>\n                    <Input fluid name={'itemDescription'} value={itemDescription}\n                           onChange={this.handleValueChange}/>\n                    <Grid columns={2} style={{marginTop:20}}>\n                        <Grid.Column>\n                            <Button fluid negative as={Link} to={`/categories/${this.props.match.params.id}`}>Back</Button>\n                        </Grid.Column>\n                        <Grid.Column>\n                            <Button fluid positive onClick={this.onCreateItem}>Create</Button>\n                        </Grid.Column>\n                    </Grid>\n                </Container>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps({userData}) {\n    return {\n        User: userData.user,\n    }\n}\n\nexport default connect(mapStateToProps)(CreateCategoryPage);","import React, {Component, Fragment} from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Redirect, Route} from 'react-router-dom';\nimport LoadingBar from 'react-redux-loading';\nimport {connect} from 'react-redux';\nimport LoginPage from \"./Components/LoginPage\";\nimport MainPage from \"./Components/MainPage\";\nimport NavigationMenu from \"./Components/Objects/NavigationMenu\";\nimport CategoryPage from \"./Components/CategoryPage\";\nimport ItemPage from \"./Components/ItemPage\";\nimport CreateCategoryPage from \"./Components/CreateCategoryPage\";\nimport CreateNewItemPage from \"./Components/CreateNewItemPage\";\nimport {receiveUser} from \"./Actions/user\";\nimport {handleLogin} from \"./Actions/shareActions\";\n\nclass App extends Component {\n    componentDidMount() {\n    }\n\n    render() {\n        const {loading,isLogin} = this.props;\n\n        return (\n            <Router>\n                <Fragment>\n                    {\n                        isLogin ? <NavigationMenu/> : null\n                    }\n                    <LoadingBar/>\n                    {\n                        loading === true ? null :\n                            <div>\n                                <Route path=\"/login\" component={LoginPage}/>\n                                <PrivateRoute path='/' exact component={MainPage}/>\n                                <PrivateRoute path='/categories/:id' exact component={CategoryPage}/>\n                                <PrivateRoute path='/createcategory' exact component={CreateCategoryPage}/>\n                                <PrivateRoute path='/items/:id' exact component={ItemPage}/>\n                                <PrivateRoute path='/createitem/:id' exact component={CreateNewItemPage}/>\n                            </div>\n                    }\n                </Fragment>\n            </Router>\n        );\n    }\n}\n\nconst authenticationCheck = {\n    isAuthenticated: false,\n    authenticate(cb) {\n        this.isAuthenticated = cb;\n        setTimeout(cb, 100)\n    },\n};\n\nconst PrivateRoute = ({component: Component, ...rest}) => (\n    <Route {...rest} render={(props) => (\n        authenticationCheck.isAuthenticated === true\n            ? <Component {...props} />\n            : <Redirect to={{\n                pathname: '/login',\n                state: {from: props.location}\n            }}/>\n    )}/>\n);\n\nfunction mapStateToProps({userData}) {\n    authenticationCheck.authenticate(userData.user !== undefined);\n    return {\n        isLogin: userData.user !== undefined,\n        loading: false,\n    }\n}\n\nexport default connect(mapStateToProps)(App);","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const logger = (store) => (next) => (action) => {\n    console.group(action.type);\n    console.log('The action : ', action);\n    const  returnValue = next(action);\n    console.log('The new state: ', store.getState());\n    console.groupEnd();\n    return returnValue;\n};\n\nexport default logger;","import thunk from 'redux-thunk';\nimport logger from './logger'\nimport {applyMiddleware} from 'redux'\n\nexport default applyMiddleware(\n    thunk,\n    logger,\n);","import { combineReducers } from 'redux';\nimport itemData from './items';\nimport userData from './user';\nimport categoryData from './categories';\nimport {loadingBarReducer} from 'react-redux-loading';\n\nexport default combineReducers({\n    itemData,\n    userData,\n    categoryData,\n    loadingBar: loadingBarReducer\n})","import {RECEIVE_ITEM_DETAIL, RECEIVE_ITEMS, RECEIVE_LATEST_ITEMS} from \"../Utilities/Constants/ActionTypes\";\n\nexport default function itemData(state = {}, action) {\n    switch (action.type) {\n        case RECEIVE_ITEMS :\n            return{\n                ...state,\n                items:action.items\n            };\n        case RECEIVE_LATEST_ITEMS :\n            return{\n                ...state,\n                newItems:action.items\n            };\n        case RECEIVE_ITEM_DETAIL :\n            return{\n                ...state,\n                browseItem:action.item\n            }\n        default :\n            return state;\n    }\n}","import {RECEIVE_USER} from \"../Utilities/Constants/ActionTypes\";\n\nexport default function userData(state = {}, action) {\n    switch (action.type) {\n        case RECEIVE_USER :\n            if(action.user !== undefined)\n            {\n                return{\n                    ...state,\n                    user:{\n                        name:action.user.name,\n                        access_token:action.user.access_token,\n                        refresher_token:action.user.refresh_token\n                    }\n\n                };\n            }else\n            {\n                return{\n                    ...state,\n                    user:undefined\n                };\n            }\n\n        default :\n            return state;\n    }\n}","import {RECEIVE_CATEGORIES} from \"../Utilities/Constants/ActionTypes\";\n\nexport default function categoryData(state = {}, action) {\n    switch (action.type) {\n        case RECEIVE_CATEGORIES :\n            return{\n                ...state,\n                categories:action.categories\n            };\n        default :\n            return state;\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux'\nimport middleware from './Middleware'\nimport reducer from './Reducers'\n\nconst store = createStore(reducer,middleware);\n\nReactDOM.render(\n    <Provider store ={store}>\n        <App />\n    </Provider>, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}